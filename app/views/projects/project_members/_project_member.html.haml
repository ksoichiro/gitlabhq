- user = member.user
- return unless user

%li{class: "#{dom_class(member)} js-toggle-container project_member_row access-#{member.human_access.downcase}", id: dom_id(member)}
  %span.list-item-name
    = image_tag avatar_icon(user.email, 16), class: "avatar s16"
    %strong= user.name
    %span.cgray= user.username
    - if user == current_user
      %span.label.label-success あなた
    - if user.blocked?
      %label.label.label-danger
        %strong ブロック中

  - if current_user_can_admin_project
    - unless @project.personal? && user == current_user
      .pull-right
        %strong= member.human_access
        = button_tag class: "btn-xs btn js-toggle-button",
                     title: 'アクセスレベルを編集', type: 'button' do
          %i.fa.fa-pencil-square-o

        &nbsp;
        - if current_user == user
          = link_to leave_namespace_project_project_members_path(@project.namespace, @project), data: { confirm: "プロジェクトを離脱しますか？"}, method: :delete, class: "btn-xs btn btn-remove", title: 'プロジェクトを離脱' do
            %i.fa.fa-minus.fa-inverse
        - else
          = link_to namespace_project_project_member_path(@project.namespace, @project, user), data: { confirm: remove_from_project_team_message(@project, user) }, method: :delete, remote: true, class: "btn-xs btn btn-remove", title: 'ユーザをプロジェクトから削除' do
            %i.fa.fa-minus.fa-inverse

    .edit-member.hide.js-toggle-content
      = form_for member, as: :project_member, url: namespace_project_project_member_path(@project.namespace, @project, member.user), remote: true do |f|
        .alert.prepend-top-20
          = f.select :access_level, options_for_select(ProjectMember.access_roles, member.access_level)
          = f.submit 'Save', class: 'btn btn-save btn-sm'
