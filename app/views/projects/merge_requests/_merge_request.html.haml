%li{ class: mr_css_classes(merge_request) }
  .merge-request-title
    %span.str-truncated
      = link_to_gfm merge_request.title, merge_request_path(merge_request), class: "row_title"
    .pull-right.light
      - if merge_request.merged?
        %span
          %i.fa.fa-check
          マージ済み
      - elsif merge_request.closed?
        %span
          %i.fa.fa-close
          クローズ
      - else
        %span.hidden-xs.hidden-sm
          %span.label-branch<
            %i.fa.fa-code-fork
            %span= merge_request.target_branch
      - if merge_request.notes.any?
        &nbsp;
        %span
          %i.fa.fa-comments
          = merge_request.mr_and_commit_notes.count
  .merge-request-info
    %span.light= "##{merge_request.iid}"
    - if merge_request.assignee
      #{link_to_member(merge_request.source_project, merge_request.assignee)} が担当
    - else
      担当なし
    - if merge_request.votes_count > 0
      = render 'votes/votes_inline', votable: merge_request
    - if merge_request.milestone_id?
      %span
        %i.fa.fa-clock-o
        = merge_request.milestone.title
    - if merge_request.tasks?
      %span.task-status
        = merge_request.task_status


    .pull-right.hidden-xs
      %small #{time_ago_with_tooltip(merge_request.updated_at, 'bottom', 'merge_request_updated_ago')} に更新

    .merge-request-labels
      - merge_request.labels.each do |label|
        = link_to namespace_project_merge_requests_path(merge_request.project.namespace, merge_request.project, label_name: label.name) do
          = render_colored_label(label)
